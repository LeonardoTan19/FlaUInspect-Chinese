<Window x:Class="FlaUInspect.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        mc:Ignorable="d"
        xmlns:models="clr-namespace:FlaUInspect.Models"
        xmlns:flauidef="clr-namespace:FlaUI.Core.Definitions;assembly=FlaUI.Core"
        xmlns:viewModels="clr-namespace:FlaUInspect.ViewModels"
        Title="FlaUInspect" d:DesignHeight="350" d:DesignWidth="500" d:LayoutOverrides="Width, Height" ResizeMode="CanResizeWithGrip">
    <Window.Resources>
        <Style x:Key="SelectableLabel" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="IsReadOnly" Value="True" />
        </Style>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="F5" Command="{Binding RefreshCommand}"/>
    </Window.InputBindings>
    <Grid>
        <DockPanel>
            <Menu DockPanel.Dock="Top">
                <MenuItem Header="文件(_F)">
                    <MenuItem Header="新建实例" Command="{Binding StartNewInstanceCommand}" />
                    <MenuItem Header="捕获选中项" Command="{Binding CaptureSelectedItemCommand}" />
                    <MenuItem Header="刷新(_R)" InputGestureText="F5" />
                    <Separator />
                    <MenuItem Header="退出(_X)" Click="MenuItem_Click" />
                </MenuItem>
                <MenuItem Header="模式(_M)">
                    <MenuItem Header="悬停模式（使用Ctrl）" IsCheckable="True" IsChecked="{Binding EnableHoverMode}" />
                    <MenuItem Header="焦点跟踪" IsCheckable="True" IsChecked="{Binding EnableFocusTrackingMode}" />
                    <MenuItem Header="显示XPath" IsCheckable="True" IsChecked="{Binding EnableXPath}" />
                </MenuItem>
            </Menu>
            <StatusBar DockPanel.Dock="Bottom">
                <StatusBarItem>
                    <Label Content="{Binding SelectedAutomationType, FallbackValue=无}" />
                </StatusBarItem>
                <StatusBarItem>
                    <StackPanel Orientation="Horizontal" Visibility="{Binding EnableXPath, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Label>XPath:</Label>
                        <TextBox VerticalAlignment="Center">
                            <TextBox.Style>
                                <Style BasedOn="{StaticResource SelectableLabel}" TargetType="{x:Type TextBox}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding EnableXPath}" Value="True">
                                            <Setter Property="Text" Value="{Binding SelectedItemInTree.XPath, FallbackValue=无, Mode=OneWay}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </StackPanel>
                </StatusBarItem>
            </StatusBar>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <GroupBox Header="{Binding SelectedAutomationType, FallbackValue=无}" Grid.Column="0">
                    <TreeView ItemsSource="{Binding Elements}">
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}">
                                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                <Setter Property="FontWeight" Value="Normal" />
                                <EventSetter Event="Selected" Handler="TreeViewSelectedHandler" />
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="FontWeight" Value="Bold" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TreeView.ItemContainerStyle>
                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate ItemsSource="{Binding Children}" DataType="{x:Type models:Element}">
                                <StackPanel Orientation="Horizontal">
                                    <Image Width="16" Height="16" Margin="0,0,5,0">
                                        <Image.Style>
                                            <Style TargetType="{x:Type Image}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ControlType}" Value="{x:Static flauidef:ControlType.Button}">
                                                        <Setter Property="Source" Value="/Resources/Button.png" />
                                                    </DataTrigger>
                                                    <!-- 其他ControlType图片触发器保持不变 -->
                                                    <!-- 因图片资源路径与语言无关，无需修改 -->
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                    <TextBlock>
                                        <TextBlock.Text>
                                            <!-- 调整显示格式为更符合中文习惯 -->
                                            <MultiBinding StringFormat="类型：{0} 名称：&quot;{1}&quot; 自动化ID：&quot;{2}&quot;">
                                                <Binding Path="ControlType" />
                                                <Binding Path="Name" />
                                                <Binding Path="AutomationId" />
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </StackPanel>
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>
                    </TreeView>
                </GroupBox>
                <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" />
                <ScrollViewer VerticalScrollBarVisibility="Auto" Grid.Column="2">
                    <GroupBox Header="详细信息">
                        <ItemsControl ItemsSource="{Binding SelectedItemDetails}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="viewModels:DetailGroupViewModel">
                                    <Expander Header="{Binding Name}" IsExpanded="True">
                                        <ItemsControl ItemsSource="{Binding Details}" Grid.IsSharedSizeScope="True">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" SharedSizeGroup="DetailColumnKey" />
                                                            <ColumnDefinition Width="*" />
                                                        </Grid.ColumnDefinitions>
                                                        <TextBox Grid.Column="0" IsReadOnly="True" Text="{Binding Key}">
                                                            <TextBox.Style>
                                                                <Style BasedOn="{StaticResource SelectableLabel}" TargetType="{x:Type TextBox}">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding Important}" Value="True">
                                                                            <Setter Property="FontWeight" Value="Bold"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBox.Style>
                                                        </TextBox>
                                                        <TextBox Grid.Column="1" IsReadOnly="True" Text="{Binding Value}" Margin="5,0,0,0">
                                                            <TextBox.Style>
                                                                <Style BasedOn="{StaticResource SelectableLabel}" TargetType="{x:Type TextBox}">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding Value}" Value="No">
                                                                            <Setter Property="Foreground" Value="Red" />
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding Value}" Value="Yes">
                                                                            <Setter Property="Foreground" Value="Green" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBox.Style>
                                                        </TextBox>
                                                    </Grid>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </Expander>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </GroupBox>
                </ScrollViewer>
            </Grid>
        </DockPanel>
    </Grid>
</Window>
